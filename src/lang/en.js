export default {
  route: {
    dashboard: 'Dashboard',
    channelManagement: 'Channel Management',
    newManagement: 'New Management',
    newChannel: 'New Channel',
    newSubChannel: 'New Sub-Channel',
    cooperationManagement: 'Cooperation Management',
    cooperationChannel: 'Cooperation Channel',
    inStopProcess: 'In Stop Process',
    stopChannel: 'Stop Channel',
    contact: 'Contact',
    levelChange: 'Level Change',
    goodManagement: 'Good Management',
    brandList: 'Brand List',
    goodList: 'Good List',
    sourceGeneration: 'Souce Tracking Generation',
    sourceCodeManagement: 'Source Code Management',
    boxCodeManagement: 'Box Code Management',
    sourceTracking: 'Source Tracking',
    inventoryTracking: 'Inventory Tracking',
    orderManagement: 'Order Management',
    allOrders: 'All Orders',
    billManagement: 'Bill Management',
    mergeRefundOrders: 'Merge Refund Orders',
    payOrder: 'Pay Order',
    payRefund: 'Pay Refund',
    compensationManagement: 'Compensation Management',
    receivedCompensation: 'Received Compensation',
    payCompensation: 'Pay Compensation',
    receivableManagement: 'Receivable Management',
    channelCooperator: 'Channel Cooperator',
    brandCooperator: 'Brand Cooperator',
    earnestMoney: 'Earnest Money',
    restMoney: 'Rest Money',
    collectedMoney: 'Collected Money',
    preExtraMoney: 'Due in Extra Money',
    blemishExtraMoney: 'Blemish Extra Money',
    defectiveProduct: 'Defective Product',
    damagedProduct: 'Damaged Product',
    lessCargoProduct: 'Less Cargo Product',
    brokenExtraMoney: 'Broken Extra Money',
    extraMoney: 'Extra Money',
    preRefundment: 'Due in Refundment',
    refundManagement: 'Refund Management',
    receivedRefund: 'Received Refund',
    stockingStatus: 'Stocking Status',
    preStocking: 'Due in Stocking',
    inStocking: 'in Stocking',
    shortStocking: 'Short of Stocking',
    receivingStatus: 'Receiving Status',
    deliveredGood: 'Delivered Good',
    receiving: 'Receiving',
    preReceiving: 'Due in Receiving',
    Received: 'Received',
    problematicProductManagement: 'Problematic Product Management',
    extraMoneyOrder: 'Extra Money Order',
    replenishmentOrder: 'Replenishment Order',
    inCollectingMoney: 'Waiting for Collecting Money',
    inRemittance: 'Waiting for Remittance',
    finishExtraMoney: 'Finished Extra Money',
    notAllowExtraMoney: 'Not Allow Extra Money',
    complain: 'Complain',
    rejectComplain: 'Reject Complain',
    brokenReplenishment: 'Broken Good Replenishment',
    lackReplenishment: 'Lack of Good Replenishment',
    pendingApprovalReplenishmentBronken: 'Pending Approval Replenishment (Bronken)',
    pendingReplenishmentBronken: 'Pending Replenishment (Bronken)',
    finishReplenishmentBronken: 'Finished Replenishment (Broken)',
    transferReplenishmentBronken: 'Transfer Replenishment (Broken)',
    notAllowReplenishment: 'Not Allow Replenishment (Broken)',
    brokenReplenishmentBroken: 'Broken Replenishment (Broken)',
    complainSuccessBroken: 'Complain Success (Broken)',
    introduction: 'Introduction',
    documentation: 'Documentation',
    guide: 'Guide',
    permission: 'Permission',
    pagePermission: 'Page Permission',
    directivePermission: 'Directive Permission',
    icons: 'Icons',
    components: 'Components',
    componentIndex: 'Introduction',
    tinymce: 'Tinymce',
    markdown: 'Markdown',
    jsonEditor: 'JSON Editor',
    dndList: 'Dnd List',
    splitPane: 'SplitPane',
    avatarUpload: 'Avatar Upload',
    dropzone: 'Dropzone',
    sticky: 'Sticky',
    countTo: 'CountTo',
    componentMixin: 'Mixin',
    backToTop: 'BackToTop',
    dragDialog: 'Drag Dialog',
    dragKanban: 'Drag Kanban',
    charts: 'Charts',
    keyboardChart: 'Keyboard Chart',
    lineChart: 'Line Chart',
    mixChart: 'Mix Chart',
    example: 'Example',
    Table: 'Table',
    dynamicTable: 'Dynamic Table',
    dragTable: 'Drag Table',
    inlineEditTable: 'Inline Edit',
    complexTable: 'Complex Table',
    treeTable: 'Tree Table',
    customTreeTable: 'Custom TreeTable',
    tab: 'Tab',
    form: 'Form',
    createArticle: 'Create Article',
    editArticle: 'Edit Article',
    articleList: 'Article List',
    errorPages: 'Error Pages',
    page401: '401',
    page404: '404',
    errorLog: 'Error Log',
    excel: 'Excel',
    exportExcel: 'Export Excel',
    selectExcel: 'Export Selected',
    uploadExcel: 'Upload Excel',
    zip: 'Zip',
    exportZip: 'Export Zip',
    theme: 'Theme',
    clipboardDemo: 'Clipboard',
    i18n: 'I18n',
    abnormalTracking: 'Abnormal Tracking',
    customerTracking: 'Customer Tracking',
    verifySetting: 'Verify Setting',
    stockManagement: 'Stock Management',
    settingManagement: 'Setting Management',
  },
  navbar: {
    logOut: 'Log Out',
    dashboard: 'Dashboard',
    github: 'Github',
    screenfull: 'screenfull',
    theme: 'theme'
  },
  login: {
    title: 'Login Form',
    logIn: 'Log in',
    username: 'Username',
    password: 'Password',
    any: 'any',
    thirdparty: 'Or connect with',
    thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !'
  },
  order: {
    zhEn: '（ZH/EN）',
    orderNo: 'Order No.',
    retailerCategories: 'Retailer Categories',
    retailerNo: 'Retailer No.',
    retailerName: 'Retailer Name',
    brandName: 'Brand Name',
    orderAmount: 'Total Purchase Price',
    thirtyPercentDeposit: '30% Deposit',
    residualPayment: '70% Residual Payment',
    orderStatus: 'Order Status',
    checkStock: 'Check Stock',
    waitingForStock: 'Waiting for Stock',
    unpaidResidualPayment: 'Unpaid Residual Payment',
    pendingShipping: 'Pending Shipping',
    dispatched: 'Dispatched',
    receivedPackage: 'Received Package',
    stopedOrder: 'Stoped Order',
    suspendOrder: 'Suspend Order',
    operation: 'Operation',
    reviewOrder: 'Review Order',
    processPackage: 'Process Package',
    address: 'Address',
    city: 'City',
    consignee: 'Consignee',
    contact: 'Contact',
    tel: 'Tel',
    receivables: 'Receivables',
    remittance: 'Remittance',
    bank: 'Bank',
    paythirtyPercentDeposittime: 'Time of 30% Deposit Payment: ',
    thirtyPercentDepositAmount: 'Amount of 30% Deposit: ',
    statusNoGoodsRefundDeposit: 'Deposit Refund for Out Of Stock',
    statusCancelRefundDeposit: '取消退订金Deposit Refund for Cancellation',
    statusRefundAll: 'Full Payment Refund for Cancellation',
    statusOrderTermination: 'Termination of Order',
    typeDeposit: 'Deposit',
    typeAll: 'Full Payment',
    typeDeposit80: 'Return 80% of the Deposit',
    emailContact: 'Email Contacts',
    emailSubject: 'Email Subject',
    documentSubject: 'Document Subject',
    arrangeOutbound: 'Arrange Outbound',
    sendInvoice: 'Send Invoice',
    upload: 'Upload',
    reviewOrderListOrMergeOrderList: 'Review Order List',
    comment: 'Comment',
    sendODO: 'Send ODO.',
    send: 'Send',
    sendODOSuccess: 'The document has been successfully sent to your selected Email.',
    outboundQRCodeScanTips: 'Please scan the code to record the outbound.',
    amount: 'Amount',
    mergeRefundOrder: 'Merge Refund Order',
    mergePaymentNo: 'Merge Payment No.',
    remittingBankSWIFITCode: 'Remitting Bank SWIFIT Code',
    remittingBankName: 'Remitting Bank Name',
    remittingBankAddress: 'Remitting Bank Address',
    paymentReceive: 'Paid Payment	',
    checkPayment: 'Check Payment',
    toReceived: 'Received	',
    confirmReceivePayment: 'Merge payment received，each order has been entered their respective processes automatically.',
    mergeOrderNo: 'Merge Payment No.',
    transportation: 'transportation',
    byAir: 'By Air',
    bySea: 'By Sea',
    packageSpecification: 'Selling Unit',
    orderQuantity: 'Order Quantity',
    replenishmentSpecification: 'Replenishment Package',
    replenishmentQuantity: 'Replenishment Quantity',
    packingUnit: 'Packing Unit',
    paymentPayTime: 'Payment time（Wormir）: ',
    beneficiaryBankSWIFITCode: 'Beneficiary Bank SWIFIT Code',
    beneficiaryBankName: 'Beneficiary Bank Name',
    beneficiaryBankAddress: 'Beneficiary Bank Address',
    outOfStock: 'Out of Stock',
    units: 'units',
    unit: 'unit',
    pcs: 'pcs',
    individualReplenishment: 'Individual Replenishment',
    unitsReplenishment: 'Units Replenishment',
    individualProductQuantity: 'Individual Product Quantity（pcs）',
    unitsQuantity: 'Units Quantity（units）',
    reserveInventorySuccess: 'Inventory reservation has made, the order will entered the next process automatically.',
    reserveInventory: 'Reserve Inventory',
    mergeOrderWarning: 'Warn notice: Please merge the orders that less than 2000pcs, or submit shipments directly for individual orders that exceeding 2000pcs.',
    reviewOrderList: 'View Order List',
    totalProductQuantity: 'Total Product Quantity',
    mergeOrderListWarning: 'Warm Notice: Merge orders is an unalterable operation, or this merge order list can be withdrawn.',
    reviewDetail: 'Review Detail',
    compensation: 'Compensation',
    replenishmentStatus: 'Replenishment Status',
    replenishmentType: 'Replenishment Type',
    compensationType: 'Compensation Type',
    description: 'Description',
    applicationReason: 'Application Reason',
    applicationReasonContent: 'Apply offset compensation for customer on the account of defective appearance.',
    applicationTime: 'Application Time',
    photoEvidence: 'Photo Evidence',
    applicationResult: 'Application Result',
    applicationDismissed: 'Application Dismissed',
    reviewTime: 'Review Time',
    pendingApproval: 'Pending Approval',
    clickToLarge: 'Click to Enlarge',
    keyword: 'Keyword',
    reviewApplication: 'Review Application',
    cargoShortageDetails: 'Cargo Shortage Details',
    cargoShortageType: 'Cargo Shortage Type',
    clickToView: 'Click To View',
    reviewResult: 'Review Result',
    replenishmentApproval: 'Replenishment Approval',
    refundType: 'Refund Type',
    refundAmount: 'Refund Amount',
    paymentStatus: 'Payment Status',
    compensationAfterApplication: 'Compensation After Application',
    compensationAfterAppeal: 'Compensation After Appeal',
    compensationForDamageApproval: 'Compensation For Damage Approval',
    mergeCompensationOrders: 'Merge Compensation Orders',
    compensationAmount: 'Compensation Amount',
    compensationStatus: 'Compensation Status',
    pendingCompensation: 'Pending Compensation',
    paidCompensation: 'Paid Compensation',
    appealRequest: 'Appeal Request',
    appealRequestReason1: 'Offset reduces complaints.',
    appealRequestReason2: 'Too damaged to accept no choice other than replenishment',
    appealRequestReason3: 'Apply for offset compensation on account of defective products to maintain sale.',
    totalPendingCompensation: 'Total Pending Compensation',
    mergeCompensationOrderWarn: 'Warm Notice: Merge compensation orders is an unalterable operation, or this Compensation can be withdrawn.',
    mergeCompensationOrderSuccess: 'Compensation orders have been merged, please check “Compensation Management – Pay Compensation” and complete payment.',
    compensationWithdraw: 'Compensation Withdraw',
    compensationWithdrawSuccess: 'Compensation have been withdrawn, related products are back to “Compensation Management- Merge Payment” page.',
    refundReason: 'Refund Reason',
    reasonLackGoods: 'No longer produce，brand owner cancel the reservation.',
    reasonCancelRefundDeposit: 'Retailer has waited too long for stock and cancelled the order',
    reasonTerminate: 'Retailer failed to pay residual payment, the order is terminated.',
    reasonCancelRefundAll: 'Retailer has waited too long for shipment and cancelled the order.',
    receivedDeposit30: 'Received 30% Deposit',
    receivedResidual70: 'Received 70% Residual Payment',
    pendingRefundDeposit30: 'Pending Refund of 30% Deposit',
    pendingRefundDeposit80: ' Total Pending Refund of 80% of the Deposit',
    pendingRefundAll: 'Pending Refund of Full Payment',
    pendingRefundTotal: 'Total Pending Refund',
    pendingRefund: 'Pending Refund',
    paidRefund: 'Refunded Payment',
    refundedDeposit30: 'Refunded 30% Deposit',
    refundedDeposit80: 'Total Refunded 80% of the Deposit',
    refundedAll: 'Refunded Full Payment',
    refundedTotal: 'Total Refunded Payment',
    mergeConfirmTips: 'Warm Notice: Merge refund orders is an unalterable operation, or this refund can be withdrawn. ',
    mergeSuccessTips: 'Refund orders have been merged, please check “Refund Management – Pay Refund” and complete the payment.',
    refundWithdraw: 'Refund WithDraw',
    refundWithdrawSuccessTips: 'Refund have been withdrawn, related orders are back to “Refund Management- Merge Refund Orders” page.',
    shipmentQuantity: 'Shipment Quantity',
    cartonNo: 'Carton No.',
    packingSpecification: 'Packing Specification',
    grossWeight: 'Gross Weight',
    netWeight: 'Net Weight',
    cartonType: 'Carton Type',
    sendInvoiceWarn: 'Warm notice: Please input "Gross Weight", "Net Weight" and "Carton type" first, then send the order list.',
    InvoiceAndOrderList: 'Invoice&Order List',
    shipmentUploadWarn: 'Warm notice: Please double check the information and upload the logistc document, wrong document cannot accomplish this receipt.',
    uploadLogisticDocument: 'Upload Logistic Document',
    uploadLogisticDocumentSuccess: 'Logistic Document has been uploaded,  “review order list” is avaliable on “dispatched”.',
    mergeOrderListWithdraw: 'Merge Order List Withdraw',
    shipmentMergeOrderWithdrawSuccess: 'Merge order list have been withdrawn, related orders are back to “Merge orders” page.',
    mergeOrder: 'Merge Order',
    checkingStock: 'Checking Stock',
    submitShipmentSuccess: 'Merge orders has entered the shipment management page, “Arrange Outbound" is available now.',
    submitShipment: 'Submit Shipment',
    paidPayment: 'Paid Payment',
    problematicProduct: 'Problematic Product',
    defectiveProduct: 'Defective Product',
    damagedProduct: 'Damaged Product',
    quantity: 'Quantity',
    lessCargoProduct: 'Less Cargo Product',
    packingProduct: 'Packing Product',
    pending: 'Peding',
    negotiating: 'Negotiating',
    replenishmentCompleted: 'Replenishment Completed',
    requestRejected: 'Request Rejected'
  },
  documentation: {
    documentation: 'Documentation',
    github: 'Github Repository'
  },
  permission: {
    roles: 'Your roles',
    switchRoles: 'Switch roles'
  },
  guide: {
    description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
    button: 'Show Guide'
  },
  components: {
    documentation: 'Documentation',
    tinymceTips: 'Rich text editor is a core part of management system, but at the same time is a place with lots of problems. In the process of selecting rich texts, I also walked a lot of detours. The common rich text editors in the market are basically used, and the finally chose Tinymce. See documentation for more detailed rich text editor comparisons and introductions.',
    dropzoneTips: 'Because my business has special needs, and has to upload images to qiniu, so instead of a third party, I chose encapsulate it by myself. It is very simple, you can see the detail code in @/components/Dropzone.',
    stickyTips: 'when the page is scrolled to the preset position will be sticky on the top.',
    backToTopTips1: 'When the page is scrolled to the specified position, the Back to Top button appears in the lower right corner',
    backToTopTips2: 'You can customize the style of the button, show / hide, height of appearance, height of the return. If you need a text prompt, you can use element-ui el-tooltip elements externally',
    imageUploadTips: 'Since I was using only the vue@1 version, and it is not compatible with mockjs at the moment, I modified it myself, and if you are going to use it, it is better to use official version.'
  },
  bill: {
    orderNo: 'Order No.',
    retailerCategories: 'Retailer Categories',
    retailerNo: 'Retailer No.',
    retailerName: 'Retailer Name',
    brandName: 'Brand Name',
    orderAmount: 'Order Amount',
    thirtyPercentDeposit: '30% Deposit',
    residualPayment: '70% Residual Payment',
    orderStatus: 'Order Status',
    checkStock: 'Check Stock',
    waitingForStock: 'Waiting for Stock',
    unpaidResidualPayment: 'Unpaid Residual Payment',
    pendingShipping: 'Pending Shipping',
    dispatched: 'Dispatched',
    receivedPackage: 'Received Package',
    stopedOrder: 'Stoped Order',
    suspendOrder: 'Suspend Order',
    operation: 'Operation',
    reviewOrder: 'Review Order',
    processPackage: 'Process Package',
    address: 'Address',
    city: 'City',
    consignee: 'Consignee',
    contact: 'Contact',
    tel: 'Tel',
    receivables: 'Receivables',
    remittance: 'Remittance',
    bank: 'Bank',
    paythirtyPercentDeposittime: 'Time of 30% Deposit Payment: ',
    thirtyPercentDepositAmount: 'Amount of 30% Deposit: '
  },
  product: {
    brandName: 'Brand Name',
    productNo: 'Product No.',
    productName: 'Product Name',
    productSpecification: 'Product Specification',
    packageSpecification: 'Package Specification',
    replenishmentSpecification: 'Replenishment Specification',
    domesticRetailPrice: 'Domestic Retail Price',
    orderQuantity: 'Order Quantity',
    originalDiscount: 'Original Discount',
    orderDiscount: 'Order Discount',
    orderUnitPrice: 'Order Unit-Price',
    replenishmentQuantity: 'Replenishment Quantity'
  },
  table: {
    dynamicTips1: 'Fixed header, sorted by header order',
    dynamicTips2: 'Not fixed header, sorted by click order',
    dragTips1: 'The default order',
    dragTips2: 'The after dragging order',
    title: 'Title',
    importance: 'Imp',
    type: 'Type',
    remark: 'Remark',
    search: 'Search',
    add: 'Add',
    export: 'Export',
    reviewer: 'reviewer',
    id: 'ID',
    date: 'Date',
    author: 'Author',
    readings: 'Readings',
    status: 'Status',
    actions: 'Actions',
    edit: 'Edit',
    publish: 'Publish',
    draft: 'Draft',
    delete: 'Delete',
    cancel: 'Cancel',
    confirm: 'Confirm'
  },
  errorLog: {
    tips: 'Please click the bug icon in the upper right corner',
    description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
    documentation: 'Document introduction'
  },
  excel: {
    export: 'Export',
    selectedExport: 'Export selected items',
    placeholder: 'Please enter the file name(default excel-list)'
  },
  zip: {
    export: 'Export',
    placeholder: 'Please enter the file name(default file)'
  },
  theme: {
    change: 'Theme change',
    documentation: 'Theme documentation',
    tips: 'Tips: It is different from the theme-pick on the navbar is two different skinning methods, each with different application scenarios. Refer to the documentation for details.'
  },
  tagsView: {
    close: 'Close',
    closeOthers: 'Close Others',
    closeAll: 'Close All'
  }
}
